{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SCCU-EU-Data-Factory"
		},
		"PROD_LoanDueTrigger_properties_Nextly_LoanDueAlerts_PROD_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"PROD_LoanDueTrigger_properties_Nextly_LoanDueAlerts_PROD_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"PROD_LoanDueTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"PROD_ThresholAlert_properties_Nextly_ThresholdAlert_PROD_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"PROD_ThresholAlert_properties_Nextly_ThresholdAlert_PROD_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"PROD_ThresholAlert_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		},
		"PROD_TransactionAlert_properties_Nextly_TransactionAlert_PROD_parameters_FileName": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"PROD_TransactionAlert_properties_Nextly_TransactionAlert_PROD_parameters_FilePath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"PROD_TransactionAlert_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a8cd236d-26bd-46eb-81fc-dea8aac0fe3c/resourceGroups/SCCU-EU-PROD-SRV-RG/providers/Microsoft.Storage/storageAccounts/sccudatafactorystorage"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SCCUPROD_ActivityLogs_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ActivityLog_UpsertTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE (DestinationSchemaName = 'ActivityLog')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUPROD_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DependentTables_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ActivityLog_UpsertTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ActivityLog_UpsertTables').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} with (NOLOCK) WHERE CAST(@{item().KeyColumn} AS DATE) >= DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE)) OR CAST(@{item().KeyColumn2} AS DATE) >= DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SCCUPROD_BusinessData_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Archive_Destination",
											"type": "DatasetReference",
											"parameters": {
												"DestinationTable": "@item().DestinationTableName",
												"DestinationSchema": "dbo"
											}
										}
									]
								},
								{
									"name": "SendMainl-BusinessDataFailure_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "BusinessData_Copy data",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Failure",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "@concat('Pipeline -', activity('BusinessData_Copy data').name, ' has been failed')",
												"type": "Expression"
											},
											"Content": {
												"value": "@activity('BusinessData_Copy data').output.errors.message",
												"type": "Expression"
											},
											"Importance": "High"
										}
									}
								}
							]
						}
					},
					{
						"name": "ActivityLogsToArchive",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivityLog_UpsertTables",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ActivityLogsToArchive",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BusinessData_Rebuild_ActivityLogs_Index",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DependentTables_ForEach",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ActivityLogsToArchive",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BusinessData_Rebuild_ActivityLogs_Index",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BusinessData_Rebuild_ActivityLogs_Stat",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BusinessData_Rebuild_ActivityLogs_Index",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BusinessData_Rebuild_ActivityLogs_Stat",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "PurgeOld_ActivityLogs",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "ActivityLogsToArchive",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PurgeOld_ActivityLogs",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCUPROD_BusinessData_DynamicRetention')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BusinessData_Archive",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Static BusinessData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsArchiveEnabled=1 AND ArchiveDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUPROD_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Archive_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Archive').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "CheckRowCount",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlMISource",
											"sqlReaderQuery": {
												"value": "SELECT count(1) as 'RecordCount' FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
												"type": "Expression"
											},
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "SCCUPROD_BusinessData_Source",
											"type": "DatasetReference",
											"parameters": {
												"SourceDB": "@item().SourceDBName",
												"SourceTable": "@item().SourceTableName",
												"SourceSchema": "@item().SourceSchemaName"
											}
										}
									}
								},
								{
									"name": "If Record exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "CheckRowCount",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('CheckRowCount').output.firstRow['RecordCount'],0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "BusinessData_Script",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "BusinessData_Copy data",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 3,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "SCCU_BusinessDataPROD",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"type": "Query",
															"text": {
																"value": "DECLARE @BatchSize INT = 10000;\nDECLARE @RowsAffected INT;\n \nWHILE 1 = 1\nBEGIN\n    DELETE TOP (@BatchSize)\n    FROM @{item().SourceSchemaName}.@{item().SourceTableName}  \n\tWHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))\n    \n    SET @RowsAffected = @@ROWCOUNT; \n    \n\tWAITFOR DELAY '00:00:01';\n    IF @RowsAffected = 0\n        BREAK; \nEND",
																"type": "Expression"
															}
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											},
											{
												"name": "BusinessData_Copy data",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 3,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "SELECT * FROM @{item().SourceSchemaName}.@{item().SourceTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().ArchiveDays}, CAST(GETDATE() AS DATE))",
															"type": "Expression"
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"sqlWriterUseTableLock": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "SCCUPROD_BusinessData_Source",
														"type": "DatasetReference",
														"parameters": {
															"SourceDB": "@item().SourceDBName",
															"SourceTable": "@item().SourceTableName",
															"SourceSchema": "@item().SourceSchemaName"
														}
													}
												],
												"outputs": [
													{
														"referenceName": "Archive_Destination",
														"type": "DatasetReference",
														"parameters": {
															"DestinationTable": "@item().DestinationTableName",
															"DestinationSchema": "@item().DestinationSchemaName"
														}
													}
												]
											},
											{
												"name": "SendMail-BusinessDataFailure",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "BusinessData_Copy data",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "SendEmail_Failure",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"Subject": {
															"value": "@concat('Pipeline -', activity('BusinessData_Copy data').name, ' has been failed')",
															"type": "Expression"
														},
														"Content": {
															"value": "@activity('BusinessData_Copy data').output.errors.message",
															"type": "Expression"
														},
														"Importance": "High"
													}
												}
											},
											{
												"name": "SendMail-BusinessDataFailure_Delete",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "BusinessData_Script",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"policy": {
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "SendEmail_Failure",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"Subject": {
															"value": "@concat('Pipeline -', activity('BusinessData_Script').name, ' has been failed')",
															"type": "Expression"
														},
														"Content": {
															"value": "@activity('BusinessData_Script').output.errors.message",
															"type": "Expression"
														},
														"Importance": "High"
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "BusinessData_Purge",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM MasterConfig WHERE DestinationSchemaName='BusinessData' AND IsPurgeEnabled=1 AND PurgeDays > 0",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUPROD_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Purge_ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "BusinessData_Purge",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('BusinessData_Purge').output.value",
								"type": "Expression"
							},
							"batchCount": 1,
							"activities": [
								{
									"name": "BusinessData_Purge_Script",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SCCU_Archivedb_PROD_DTU",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "DELETE  FROM @{item().DestinationSchemaName}.@{item().DestinationTableName} WHERE CAST(@{item().KeyColumn} AS DATE) < DATEADD(DAY, -@{item().PurgeDays}, CAST(GETDATE() AS DATE))",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "BusinessData_Rebuild_Index",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Archive_ForEach",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BusinessData_Rebuild_Index",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "BusinessData_Rebuild_Stat",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "BusinessData_Rebuild_Index",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BusinessData_Rebuild_Stat",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Static BusinessData",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SCCUPROD_Static_BusinessData_DynamicRetention",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROD_LoanDueTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Nextly_LoanDueAlerts_PROD",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('PROD_LoanDueTrigger_properties_Nextly_LoanDueAlerts_PROD_parameters_FileName')]",
							"FilePath": "[parameters('PROD_LoanDueTrigger_properties_Nextly_LoanDueAlerts_PROD_parameters_FilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/PROD/LoanDueAlerts",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('PROD_LoanDueTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROD_ThresholAlert')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Nextly_ThresholdAlert_PROD",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('PROD_ThresholAlert_properties_Nextly_ThresholdAlert_PROD_parameters_FileName')]",
							"FilePath": "[parameters('PROD_ThresholAlert_properties_Nextly_ThresholdAlert_PROD_parameters_FilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/PROD/ThresholdAlerts",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('PROD_ThresholAlert_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROD_TransactionAlert')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Nextly_TransactionAlert_PROD",
							"type": "PipelineReference"
						},
						"parameters": {
							"FileName": "[parameters('PROD_TransactionAlert_properties_Nextly_TransactionAlert_PROD_parameters_FileName')]",
							"FilePath": "[parameters('PROD_TransactionAlert_properties_Nextly_TransactionAlert_PROD_parameters_FilePath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/to-nextly/blobs/PROD/TransactionAlerts",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('PROD_TransactionAlert_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROD_sccu_loanDueTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SCCU_LoanDueAlerts_PROD",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-10-12T18:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prod_Alerts_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SCCUAlerts_PROD",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2024-08-03T01:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Prod_DoneProcessing_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SCCUDoneProcessing_PROD",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2024-08-03T01:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_Offline_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MemberData",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Data Ingestion Started",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MemberDataDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AccountDetails",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MemberData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "NextlyAccountDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "UserCreditCard",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AccountDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UserCreditCards",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CCMCreditCard",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UserCreditCard",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CCM_CreditCard_AccountDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SavingsAccount",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UserCreditCard",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CK_SAV_Accounttransactions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DebitCards",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UserCreditCard",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DebitCardDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AccountLockOut",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UserCreditCard",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "NextlyAccountlockout",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AccountRoles",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UserCreditCard",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "NextlyAccountRoles",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CrossAccounts",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UserCreditCard",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "NextlyCrossAccounts",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "LoanTransaction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UserCreditCard",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "NextlyLoanTransactions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Data Ingestion Started",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Success",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": "Production Offline Data Ingestion started",
								"Content": "Production Offline Data Ingestion started",
								"Importance": "Normal"
							}
						}
					},
					{
						"name": "Data Ingestion Started_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CCMCreditCard",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SavingsAccount",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DebitCards",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "AccountLockOut",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "AccountRoles",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CrossAccounts",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LoanTransaction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Success",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": "Production Offline Data Ingestion has been Completed ",
								"Content": "Production Offline Data Ingestion has been Completed",
								"Importance": "Normal"
							}
						}
					},
					{
						"name": "Data Ingestion Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MemberData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('MemberData').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('MemberData').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AccountDetails",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('AccountDetails').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('AccountDetails').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "UserCreditCard",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('UserCreditCard').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('UserCreditCard').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CCMCreditCard",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('CCMCreditCard').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('CCMCreditCard').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SavingsAccount",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('SavingsAccount').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('SavingsAccount').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DebitCards",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('DebitCards').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('DebitCards').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy6",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AccountLockOut",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('AccountLockOut').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('AccountLockOut').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy7",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AccountRoles",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('AccountRoles').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('AccountRoles').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy8",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CrossAccounts",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('CrossAccounts').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('CrossAccounts').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Data Ingestion Failure_copy9",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LoanTransaction",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Offline_SendEmail_Failure",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": {
									"value": "@concat('Pipeline -', activity('LoanTransaction').name, ' has been failed')",
									"type": "Expression"
								},
								"Content": {
									"value": "@activity('LoanTransaction').output.errors.message",
									"type": "Expression"
								},
								"Importance": {
									"value": "High",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "OfflineServices"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROD_DynamicRetention_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline has activities which archive/purge data from souce DB's to Archive DB ",
				"activities": [
					{
						"name": "Distinct DB",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "BacPac Tables Daily",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT DestinationSchemaName FROM MasterConfig \r\nWHERE ( IsArchiveEnabled=1 OR IsPurgeEnabled=1 ) and \r\nDestinationSchemaName <> 'BusinessData'\r\nUNION \r\nSELECT 'BusinessData' as DestinationSchemaName",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUPROD_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Schemas",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Distinct DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Distinct DB').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 1,
							"activities": [
								{
									"name": "DbNameSwitch",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().DestinationSchemaName",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "MetaDb",
												"activities": [
													{
														"name": "Meta DB",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_MetaDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "LogDb",
												"activities": [
													{
														"name": "Log DB",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_LogDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "BusinessData",
												"activities": [
													{
														"name": "BusinessData",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_BusinessData_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "BBAlerts",
												"activities": [
													{
														"name": "BBAlerts",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_BBAlerts_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "AdminLogDb",
												"activities": [
													{
														"name": "AdminLogDb",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_Admin_LogDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "AdminMetaDb",
												"activities": [
													{
														"name": "AdminMetaDb",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_Admin_MetaDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "AnonymousLogDb",
												"activities": [
													{
														"name": "AnonymousLogDb",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_Anonymous_LogDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "AnonymousMetaDb",
												"activities": [
													{
														"name": "AnonymousMetaDb",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_Anonymous_MetaDB_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {}
														}
													}
												]
											},
											{
												"value": "LogDBMI",
												"activities": [
													{
														"name": "SCCUPROD_LogDBMI_DynamicRetention",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"policy": {
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "SCCUPROD_LogDBMI_DynamicRetention",
																"type": "PipelineReference"
															},
															"waitOnCompletion": false,
															"parameters": {}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "BacPac Tables Daily",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "BacPac Tables Daily",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SCCUPROD_BusinessData_DynamicRetention')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ACISeri_Biweekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "BacPac Tables ACISeri_CheckFree_Vsofts_WeeklyTwice",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 4,
						"startTime": "2025-01-29T10:35:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActivityLog_Weekly_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "BacPac ActivityLog_Weekly",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2025-02-17T13:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Log_Log_Biweekly')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "BacPac Tables Log_LogTables_WeeklyTwice",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 4,
						"startTime": "2025-01-31T10:35:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_DailyRetention_Main')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "PROD_DailyRetention_Main",
				"activities": [
					{
						"name": "If Retention Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IsRetentionEnabled",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(activity('IsRetentionEnabled').output.firstRow['RecordCount'],0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Maintanance Disable",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Success",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": "SCCU DB daily maintenance Disabled",
											"Content": "SCCU DB daily maintenance Disabled",
											"Importance": "High"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PROD_DynamicRetention_Main",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Start Maintenance Notification",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PROD_DynamicRetention_Main",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SCCUPROD_ActivityLogs_Main",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Start Maintenance Notification",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SCCUPROD_ActivityLogs_Main",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SendEmailSuccess",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PROD_DynamicRetention_Main",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SCCUPROD_ActivityLogs_Main",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "AdminLoginHistory",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Success",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "SCCU Daily maintenance has been completed",
												"type": "Expression"
											},
											"Content": {
												"value": "SCCU Daily DB maintenance has been completed.",
												"type": "Expression"
											},
											"Importance": "Normal"
										}
									}
								},
								{
									"name": "SendMainl-ActivityLogFailure",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SCCUPROD_ActivityLogs_Main",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Failure",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "@concat('Pipeline -', activity('SCCUPROD_ActivityLogs_Main').name, ' has been failed')",
												"type": "Expression"
											},
											"Content": {
												"value": "@activity('SCCUPROD_ActivityLogs_Main').output.errors.message",
												"type": "Expression"
											},
											"Importance": "High"
										}
									}
								},
								{
									"name": "SendMainl-BusinessDataFailure_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PROD_DynamicRetention_Main",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Failure",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "@concat('Pipeline -', activity('PROD_DynamicRetention_Main').name, ' has been failed')",
												"type": "Expression"
											},
											"Content": {
												"value": "@activity('PROD_DynamicRetention_Main').output.errors.message",
												"type": "Expression"
											},
											"Importance": "High"
										}
									}
								},
								{
									"name": "AdminLoginHistory",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Start Maintenance Notification",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SCCUPROD_AdminLoginHistory",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SendMainl-ActivityLogFailure_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "AdminLoginHistory",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Failure",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "@concat('Pipeline -', activity('AdminLoginHistory').name, ' has been failed')",
												"type": "Expression"
											},
											"Content": {
												"value": "@activity('AdminLoginHistory').output.errors.message",
												"type": "Expression"
											},
											"Importance": "High"
										}
									}
								},
								{
									"name": "Summary Email",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SendEmailSuccess",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Summary_StoredProcedure_Emails",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"procName": "sp_GetEmailData_BacpacRetention_Summary"
										}
									}
								},
								{
									"name": "Start Maintenance Notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Success",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": "SCCU DB daily maintenance started",
											"Content": "SCCU DB daily maintenance started",
											"Importance": "Normal"
										}
									}
								}
							]
						}
					},
					{
						"name": "IsRetentionEnabled",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(1) as 'RecordCount' FROM [dbo].[DailyRetentionConfig] where PipelineRun=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUPROD_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PROD_DynamicRetention_Main')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUPROD_ActivityLogs_Main')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/00_DailyRetention_Main_Debug')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "PROD_DailyRetention_Main for debug version",
				"activities": [
					{
						"name": "If Retention Enabled",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IsRetentionEnabled",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(1,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Start Maintenance Notification_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Success",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": "SCCU DB daily maintenance Disabled",
											"Content": "SCCU DB daily maintenance Disabled",
											"Importance": "High"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "PROD_DynamicRetention_Main",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Start Maintenance Notification",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PROD_DynamicRetention_Main",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SCCUPROD_ActivityLogs_Main",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Start Maintenance Notification",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SCCUPROD_ActivityLogs_Main",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SendEmailSuccess",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PROD_DynamicRetention_Main",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SCCUPROD_ActivityLogs_Main",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "AdminLoginHistory",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Success",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "SCCU Daily maintenance has been completed",
												"type": "Expression"
											},
											"Content": {
												"value": "SCCU Daily DB maintenance has been completed.",
												"type": "Expression"
											},
											"Importance": "Normal"
										}
									}
								},
								{
									"name": "SendMainl-ActivityLogFailure",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SCCUPROD_ActivityLogs_Main",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Failure",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "@concat('Pipeline -', activity('SCCUPROD_ActivityLogs_Main').name, ' has been failed')",
												"type": "Expression"
											},
											"Content": {
												"value": "@activity('SCCUPROD_ActivityLogs_Main').output.errors.message",
												"type": "Expression"
											},
											"Importance": "High"
										}
									}
								},
								{
									"name": "SendMainl-BusinessDataFailure_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "PROD_DynamicRetention_Main",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Failure",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "@concat('Pipeline -', activity('PROD_DynamicRetention_Main').name, ' has been failed')",
												"type": "Expression"
											},
											"Content": {
												"value": "@activity('PROD_DynamicRetention_Main').output.errors.message",
												"type": "Expression"
											},
											"Importance": "High"
										}
									}
								},
								{
									"name": "AdminLoginHistory",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Start Maintenance Notification",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SCCUPROD_AdminLoginHistory",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SendMainl-ActivityLogFailure_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "AdminLoginHistory",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Failure",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": {
												"value": "@concat('Pipeline -', activity('AdminLoginHistory').name, ' has been failed')",
												"type": "Expression"
											},
											"Content": {
												"value": "@activity('AdminLoginHistory').output.errors.message",
												"type": "Expression"
											},
											"Importance": "High"
										}
									}
								},
								{
									"name": "Summary Email",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SendEmailSuccess",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Summary_StoredProcedure_Emails",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"procName": "sp_GetEmailData_BacpacRetention_Summary"
										}
									}
								},
								{
									"name": "Start Maintenance Notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SendEmail_Success",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Subject": "SCCU DB daily maintenance started",
											"Content": "SCCU DB daily maintenance started",
											"Importance": "Normal"
										}
									}
								}
							]
						}
					},
					{
						"name": "IsRetentionEnabled",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT count(1) as 'RecordCount' FROM [dbo].[DailyRetentionConfig] where PipelineRun=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SCCUPROD_ArchiveSqlDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "DataRetention"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PROD_DynamicRetention_Main')]",
				"[concat(variables('factoryId'), '/pipelines/SCCUPROD_ActivityLogs_Main')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCCU_Offline_Prod_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "00_Offline_Main",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-03-08T03:00:00",
						"timeZone": "Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/00_Offline_Main')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROD_DataRetentionTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "00_DailyRetention_Main",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-10-23T10:30:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/00_DailyRetention_Main')]"
			]
		}
	]
}