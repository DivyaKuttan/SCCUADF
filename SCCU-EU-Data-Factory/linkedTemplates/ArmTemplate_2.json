{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SCCU-EU-Data-Factory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PROD_GetTransactionAlertSubscriptionsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "TransactionAlert@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "PROD/TransactionAlertSubscription",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PROD_SQLDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataPROD",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlMITable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ActivitylogId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AdditionalInfo",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "Adaptive",
					"table": "ActivitylogAdditionalInfo"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_BBAlertsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BBAlertsUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Key",
						"type": "nvarchar"
					},
					{
						"name": "Value",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ExpireAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "schedule",
					"table": "AggregatedCounter"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedThresholdSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/CompletedThreshold",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedThresholdSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/ThresholdAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedTransactionSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/CompletedTransaction",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_CompletedTransactionSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/TransactionAlerts",
						"container": "to-nextly"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_DoneProcessingDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "DoneProcessing@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "UAT/DoneProcessing",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_GetExternalAlertRecipientsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "Alertsubscriber@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "UAT/Alertsubscriber",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_GetThresholdAlertSubscriptionsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "ThresholdAlert@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "UAT/ThresholdAlertSubscription",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_GetTransactionAlertSubscriptionsDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "TransactionAlert@{formatDateTime(addHours(utcnow(), -4), 'MMddyyyyHHmm')}.txt",
							"type": "Expression"
						},
						"folderPath": "UAT/TransactionAlertSubscription",
						"container": "from-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_SQLDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "StartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "ContentType",
						"type": "varchar"
					},
					{
						"name": "ContentLocation",
						"type": "varchar"
					},
					{
						"name": "Content",
						"type": "varchar"
					},
					{
						"name": "Start/Stop",
						"type": "bit"
					},
					{
						"name": "CampaignViewFor",
						"type": "varchar"
					},
					{
						"name": "OtherOption",
						"type": "bit"
					},
					{
						"name": "RedirectPage",
						"type": "varchar"
					},
					{
						"name": "RedirectURL",
						"type": "varchar"
					},
					{
						"name": "LaterOption",
						"type": "varchar"
					},
					{
						"name": "IntegrationWith",
						"type": "varchar"
					},
					{
						"name": "SocialMediaTitle",
						"type": "varchar"
					},
					{
						"name": "SocialMediaContent",
						"type": "varchar"
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "IsDelete",
						"type": "bit"
					},
					{
						"name": "Priority",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Keywords",
						"type": "varchar"
					},
					{
						"name": "ExcelGUID",
						"type": "varchar"
					},
					{
						"name": "Location",
						"type": "varchar"
					},
					{
						"name": "CampaignType",
						"type": "varchar"
					},
					{
						"name": "NoTrueExit",
						"type": "bit"
					},
					{
						"name": "CampaignTypeExit",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AdminCampaign"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_ThresholdSinkDastaSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BalanceAmount",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "",
					"table": "ExternalAlert_ThresholdStaging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_ThresholdSourceDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ThresholdFilename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().ThresholdFilename",
							"type": "Expression"
						},
						"folderPath": "UAT/ThresholdAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "SubscriptionID|BalanceAmount",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_TransactionSinkDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_BusinessDataUAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SubscriptionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmailContent",
						"type": "varchar"
					},
					{
						"name": "TextContent",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ExternalAlert_TransactionStaging"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UAT_TransactionSourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SCCU_DataFactory_Storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TransactionFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "UAT/TransactionAlerts",
						"container": "to-nextly"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_ThresholdAlert_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_ThresholdStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "DEV/ThresholdAlerts",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName\n",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BalanceAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_ThresholdSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"ThresholdFilename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_ThresholdSinkDastaSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_ThresholdStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_ExtThresholdAlertToQueue]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Threshold staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Dev_ThresholdSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"ThresholdFilename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/ThresholdAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_CompletedThresholdSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_CompletedThresholdSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Threshold staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_Truncate_ExternalAlert_ThresholdStaging]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_ThresholdAlert_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_ThresholdStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": {
										"value": "UAT/ThresholdAlerts",
										"type": "Expression"
									},
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName\n",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BalanceAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BalanceAmount",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_ThresholdSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"ThresholdFilename": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_ThresholdSinkDastaSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_ThresholdStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spi_ExtThresholdAlertToQueue]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Threshold staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UAT_ThresholdSourceDataSet",
								"type": "DatasetReference",
								"parameters": {
									"ThresholdFilename": "@pipeline().parameters.FileName"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/ThresholdAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_CompletedThresholdSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_CompletedThresholdSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Threshold staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_Truncate_ExternalAlert_ThresholdStaging]"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UAT_ThresholdSourceDataSet')]",
				"[concat(variables('factoryId'), '/datasets/UAT_ThresholdSinkDastaSet')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedThresholdSource')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedThresholdSink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_TransactionAlert_DEV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_ThresholdStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/TransactionAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmailContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailContent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SMSContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SMSContent",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_TransactionSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_TransactionSinkDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_ThresholdStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "spi_ExtTransactionAlertToQueue"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Transaction staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Dev_TransactionSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "DEV/TransactionAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DEV_CompletedTransactionSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_CompletedTransactionSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Transaction staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_Truncate_ExternalAlert_TransactionStaging"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataDev",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Nextly_TransactionAlert_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ExternalAlert_ThresholdStaging_Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/TransactionAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SubscriptionID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SubscriptionID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmailContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmailContent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SMSContent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SMSContent",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "UAT_TransactionSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": "@pipeline().parameters.FileName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_TransactionSinkDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ExternalAlert_ThresholdStaging_Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "spi_ExtTransactionAlertToQueue"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Truncate Transaction staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "UAT_TransactionSourceDataset",
								"type": "DatasetReference",
								"parameters": {
									"TransactionFileName": "@pipeline().parameters.FileName"
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "UAT/TransactionAlerts",
									"wildcardFileName": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UAT_CompletedTransactionSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UAT_CompletedTransactionSink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate Transaction staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "sp_Truncate_ExternalAlert_TransactionStaging"
						},
						"linkedServiceName": {
							"referenceName": "SCCU_BusinessDataUAT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"FilePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UAT_TransactionSourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/UAT_TransactionSinkDataSet')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedTransactionSource')]",
				"[concat(variables('factoryId'), '/datasets/UAT_CompletedTransactionSink')]"
			]
		}
	]
}